Get OOM error

Execute and press any key:

java -jar -Xmx100m heap-1.0.0-SNAPSHOT.jar

Use jvisualvm to observe OOM

Execute:
java -jar -Xmx100m heap-1.0.0-SNAPSHOT.jar

In jvisualvm connect to our java process
Go to "Monitor" tab
Press any key in our application
Observe how heap grows
Get heap dump

Using -XX:+HeapDumpOnOutOfMemoryError option

Execute and press any key:
java -jar -Xmx100m -XX:+HeapDumpOnOutOfMemoryError heap-1.0.0-SNAPSHOT.jar

[Optional] Using jcmd

Get pid using jps here and further through this document:

jps -lvm

jcmd <pid> GC.heap_dump <filename>

[Optional] Using jmap

jmap -dump:format=b,file=snapshot.hprof <pid>

Get heap histogram

Using jcmd

jcmd <pid> GC.class_histogram

Using jmap

jmap -histo <pid>

Analyze heap dump

Using Java Visual VM

Open retrieved heap dump in jvisualvm
Identify memory leak
OQL

Execute OQL in jvisualvm:

select objs from java.lang.Object[] objs where objs.length > 100 select referrers(objs) from java.lang.Object[] objs where objs.length > 100 select referrers(arr) from java.util.ArrayList arr where arr.size > 100

Startup jhat (note: jhat was decommissioned in JDK 9)

jhat <head_dump.hprof>

Execute OQL in jhat

select [objs, objs.length] from [Ljava.lang.Object; objs where objs.length > 100 select referrers(objs) from [Ljava.lang.Object; objs where objs.length > 100 select referrers(arr) from java.util.ArrayList arr where arr.size > 100

Please note small OQL syntax difference in jhat and jvisualvm.